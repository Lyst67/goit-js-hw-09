{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,gBAAiBC,SAASC,cAAc,kBACxCC,eAAgBF,SAASC,cAAc,iBACvCE,YAAaH,SAASC,cAAc,mBACpCG,WAAYJ,SAASC,cAAc,UAGjCI,EAAQ,KACRC,EAAO,KACPC,EAAQ,KAEZT,EAAKC,gBAAgBS,iBAAiB,SAatC,WACEH,EAAQP,EAAKC,gBAAgBU,K,IAb/BX,EAAKI,eAAeM,iBAAiB,SAQrC,WACEF,EAAOR,EAAKI,eAAeO,K,IAR7BX,EAAKK,YAAYK,iBAAiB,SAGlC,WACED,EAAQT,EAAKK,YAAYM,K,IAH3BX,EAAKM,WAAWI,iBAAiB,UAcjC,SAAsBE,GACpBA,EAAMC,iBAIeC,EAHP,EAGiBC,EAHdR,EAIjBS,YAAW,WACT,IAAMC,EAASC,aAAY,WACHC,KAAKC,SAAW,IAEpCC,QAAQC,IAAI,uBAAwCC,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAC1DjB,EAAA0B,OAAOC,QAAQ,uBAAwCF,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAE7DM,QAAQC,IAAI,sBAAuCC,OAAfT,EAAS,QAAYS,OAANR,EAAM,OACzDjB,EAAA0B,OAAOE,QAAQ,sBAAqCH,OAAfT,EAAS,QAAYS,OAANR,EAAM,QAE5DD,GAAY,EACZC,EAAQY,OAAOZ,GAASY,OAAOnB,GAC3BM,EAAWL,GACbmB,cAAcX,E,GAEfT,E,GACFO,GAjBL,IAAuBD,EAAUC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelayInput: document.querySelector('[name=\"delay\"]'),\n  delayStepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n  submitForm: document.querySelector('.form'),\n};\n\nlet delay = null;\nlet step = null;\nlet amont = null;\n\nrefs.firstDelayInput.addEventListener('input', onFirstDelay);\nrefs.delayStepInput.addEventListener('input', onDelayStep);\nrefs.amountInput.addEventListener('input', onAmount);\nrefs.submitForm.addEventListener('submit', onSubmitForm);\n\nfunction onAmount() {\n  amont = refs.amountInput.value;\n}\n\nfunction onDelayStep() {\n  step = refs.delayStepInput.value;\n}\n\nfunction onFirstDelay() {\n  delay = refs.firstDelayInput.value;\n}\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  createPromise(1, delay);\n}\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const stepId = setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n      position += 1;\n      delay = Number(delay) + Number(step);\n      if (position > amont) {\n        clearInterval(stepId);\n      }\n    }, step);\n  }, delay);\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelayInput","document","querySelector","delayStepInput","amountInput","submitForm","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amont","addEventListener","value","event","preventDefault","position","delay1","setTimeout","stepId","setInterval","Math","random","console","log","concat","Notify","success","failure","Number","clearInterval"],"version":3,"file":"03-promises.d5c0f4e8.js.map"}