{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEhCC,EAAQ,KACRC,EAAO,KACPC,EAAS,KAsBb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUS,MAAAR,IACpBS,QAAQC,IAAI,CAAEX,WAAUS,MAAAR,MAExBG,EAAO,CAAEJ,WAAUS,MAAAR,IACnBS,QAAQC,IAAI,CAAEX,WAAUS,MAAAR,I,GAEzBA,E,IA/BPR,EAAKmB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJlB,EAAQmB,OAAOF,EAAIG,cAAcP,MAAMQ,OACvCpB,EAAOkB,OAAOF,EAAIG,cAAcE,KAAKD,OACrCnB,EAASiB,OAAOF,EAAIG,cAAcG,OAAOF,OACzC,IAAK,IAAIG,EAAI,EAAGA,GAAKtB,EAAQsB,GAAK,EAChCrB,EAAcqB,EAAGxB,GACdyB,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUuB,EAAKD,EAALb,MACjBlB,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAU4B,EAAKN,EAALb,MAClBlB,EAAAiC,OAAOK,QAAQ,sBAAqCH,OAAf1B,EAAS,QAAY0B,OAANE,EAAM,M,IAE9DhC,GAAgBC,EAElBD,EAAQmB,OAAOtB,EAAKqC,SAASrB,MAAMQ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nlet delay = null;\nlet step = null;\nlet amount = null;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  delay = Number(evt.currentTarget.delay.value);\n  step = Number(evt.currentTarget.step.value);\n  amount = Number(evt.currentTarget.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay = delay + step;\n  }\n  delay = Number(form.elements.delay.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        console.log({ position, delay });\n      } else {\n        reject({ position, delay });\n        console.log({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","console","log","addEventListener","evt","preventDefault","Number","currentTarget","value","step","amount","i","then","param","delay1","Notify","success","concat","catch","delay2","failure","elements"],"version":3,"file":"03-promises.e6407072.js.map"}